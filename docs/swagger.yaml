basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Book:
    properties:
      author:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      desc:
        type: string
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    required:
    - author
    - desc
    - title
    type: object
  models.Category:
    properties:
      ID:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      desc:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.Image:
    properties:
      ID:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      image_url:
        type: string
      updatedAt:
        type: string
    type: object
  models.Product:
    properties:
      ID:
        type: integer
      category:
        allOf:
        - $ref: '#/definitions/models.Category'
        description: Category []Category `json:"category,omitempty" gorm:"many2many:product_category;"`
      category_id:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      inventory:
        $ref: '#/definitions/models.ProductInventory'
      product_desc:
        type: string
      product_images:
        items:
          $ref: '#/definitions/models.Image'
        type: array
      product_name:
        type: string
      product_price:
        type: number
      updatedAt:
        type: string
    type: object
  models.ProductInventory:
    properties:
      ID:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      product_id:
        type: integer
      quantity:
        type: integer
      updatedAt:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: tejaswan@proton.me
    name: Tejaswan Kalluri
  description: It is a ecommerce backend built with golang
  license:
    name: MIT
    url: https://mit-license.org/
  termsOfService: http://swagger.io/terms/
  title: BuyLeaf
  version: "1.0"
paths:
  /books:
    get:
      consumes:
      - application/json
      description: Get List of Books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Book'
            type: array
      summary: Get Books
      tags:
      - books
  /product:
    get:
      consumes:
      - application/json
      description: Get Product with id
      parameters:
      - description: product id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
      summary: Get Product
      tags:
      - Products
  /products:
    get:
      consumes:
      - application/json
      description: Get List of Products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
      summary: List Products
      tags:
      - Products
swagger: "2.0"
